{"version":3,"sources":["webpack:///./src/fluxex/component/ListContainer.tsx?84ee","webpack:///./src/fluxex/stores/todoStore.ts?8097"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iCAA+B;AAC/B,uCAA8C;AAC9C,yCAAmD;AACnD,qCAAiC;AACjC,kCAI2B;;;;;AAEvB,4BAAiB;AACR;;mIAAO;;AAEN,eAAM,QAAE,EAAK,MAAC,YAAS,UAAY;AACrC,eAAW,aAAG,IAAI,cAAc;AAChC,eAAc,gBAAM,MAAc,cAAW;AAC7C,eAAiB,mBAAM,MAAiB,iBAChD;;AACiB;;;;;AACjB,yBAAS,UAAkB,kBAAK,KAClC;AACqB;;;;AACnB,yBAAS,UAAqB,qBAAK,KACrC;AAES;;;;AACH,kBAAS;AACP,uBAAE,YAAS,UAEnB;AAHgB;AAKF;;;uCAAQ;AAChB,kBAAW,WAAQ,QACzB;AACgB;;;0CAAM;AAChB,kBAAW,WAAW,WAC5B;AACM;;;;AACG,oBACL,6BAAc,WAA2B,8BACvC,6BAAc,WAAY,eACxB,4BAAa,WAAc,iBAAiB,gBAC5C,oBAAC,UAAO,WAAI,KAAM,KAAiB,kBACnC,oBAAC,OAAI,QAAM,OAAM,KAAM,MAAK,MAAQ,QAAM,KAIlD;AACD;;;;GAxCuC,MAA4B;;AAApE,yBAwCC,c;;;;;;;;;;;;;;;;;;;;;;AChDD,0CAAqD;AACrD,2CAAsD;AACtD,oCAAmC;AAEnC,KAAgB,eAAY;AAC5B,iBAAU,WAAS,SAAE,UAAgB;AACnC,SAAU,SAAU,QAAY;AAC1B,aAAS;AACb,cAAK,eAAY,aAAS;AACjB,qBAAQ,QAAO;AACb,uBAAW,WAAe;AAC7B;AACR,cAAK,eAAY,aAAY;AACjB,wBAAQ,QAAO;AAChB,uBAAW,WAAe;AAC7B;AAIZ;;AAAG;AAGH,KAAU;AACJ,WACJ;AAFW;AAIb,KAAW,UAAG,iBAAa;AACnB,YAAK,KAAK,KAClB;AAAE;AAEF,KAAc,aAAG,oBAAc;AACvB,YAAK,KAAO,OAAM,OAC1B;AAeA;;KAAsB;;;;;;;;;;;2CACQ;AAClB,kBAAG,GAAa,cACxB;AAE2B;;;8CAAG;AAC1B,kBAAe,eAAa,cAClC;AAEiB;;;oCAAG;AACd,kBAAK,KACX;AAEc;;;;AACJ,oBAAO,OACjB;AACD;;;;GAhB6B,SACH;;AAiB3B,KAAa,YAAqB,IAAsB;AAEhD,qBAAS,U","file":"0.d15f0c59e1b6bd99cb4e.hot-update.js","sourcesContent":["import * as React from \"react\";\r\nimport {todoStore} from \"../stores/todoStore\";\r\nimport {TodoActions} from \"../actions/todoActions\";\r\nimport {AddItem} from \"./AddItem\"\r\nimport {List} from \"./List\"\r\n\r\nexport interface listState { list: any; }\r\n\r\nexport class ListContainer extends React.Component < {}, listState > {\r\n    todoaction:TodoActions\r\n    constructor(props) {\r\n        super(props)\r\n        //this.state.list= []; //todoStore.getList() || [];\r\n          this.state= {list:todoStore.getList()};\r\n        this.todoaction = new TodoActions();\r\n        this.handleAddItem= this.handleAddItem.bind(this)\r\n        this.handleRemoveItem= this.handleRemoveItem.bind(this);\r\n    }\r\n    componentDidMount(){\r\n    todoStore.addChangeListener(this._onChange);\r\n  }\r\n   componentWillUnmount(){\r\n    todoStore.removeChangeListener(this._onChange);\r\n  }\r\n\r\n  _onChange(){\r\n    this.setState({\r\n      list: todoStore.getList()\r\n    })\r\n  }\r\n\r\n   handleAddItem(newItem){\r\n    this.todoaction.addItem(newItem);\r\n  }\r\n  handleRemoveItem(index){\r\n    this.todoaction.removeItem(index);\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"col-sm-6 col-md-offset-3\">\r\n        <div className=\"col-sm-12\">\r\n          <h3 className=\"text-center\"> Todo List </h3>\r\n          <AddItem add={this.handleAddItem}/>\r\n          <List items={this.state.list} remove={this.handleRemoveItem}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/fluxex/component/ListContainer.tsx","import {appConstants} from \"../constant/appConstants\"\r\nimport {dispatcher} from \"../dispatcher/AppDispatcher\"\r\nimport {EventEmitter} from \"events\"\r\n\r\nlet CHANGE_EVENT = 'change';\r\ndispatcher.register( function(payload): void {\r\n  let action = payload.actionType;\r\n  switch(action){\r\n    case appConstants.ADD_ITEM:\r\n      addItem(payload.data);\r\n      todoStore.emitChange(CHANGE_EVENT);\r\n      break;\r\n    case appConstants.REMOVE_ITEM:\r\n      removeItem(payload.data);\r\n      todoStore.emitChange(CHANGE_EVENT);\r\n      break;\r\n    default:\r\n      \r\n  }\r\n});\r\n\r\n\r\nlet _store = {\r\n  list: []\r\n};\r\n\r\nlet addItem = function(item){\r\n  _store.list.push(item);\r\n};\r\n\r\nlet removeItem = function(index){\r\n  _store.list.splice(index, 1);\r\n}\r\n\r\n/*\r\nvar todoStore = Object.Assign({}, EventEmitter.prototype, {\r\n  addChangeListener: function(cb){\r\n    this.on(CHANGE_EVENT, cb);\r\n  },\r\n  removeChangeListener: function(cb){\r\n    this.removeListener(CHANGE_EVENT, cb);\r\n  },\r\n  getList: function(){\r\n    return _store.list;\r\n  },\r\n});*/\r\n\r\nclass TodoStoreStatic extends EventEmitter {\r\n  public  addChangeListener(cb){\r\n        this.on(CHANGE_EVENT, cb)\r\n    }\r\n\r\n   public  removeChangeListener(cb){\r\n    this.removeListener(CHANGE_EVENT, cb);\r\n  }\r\n\r\n  public emitChange(ce): void {\r\n    this.emit(ce);\r\n  }\r\n\r\n  public getList(){\r\n      return _store.list;\r\n  }\r\n}\r\n\r\nvar todoStore: TodoStoreStatic =  new TodoStoreStatic();\r\n\r\nexport {todoStore}\n\n\n// WEBPACK FOOTER //\n// ./src/fluxex/stores/todoStore.ts"],"sourceRoot":""}