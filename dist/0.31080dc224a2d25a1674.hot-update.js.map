{"version":3,"sources":["webpack:///./src/fluxex/stores/todoStore.ts?8097","webpack:///./src/fluxex/dispatcher/AppDispatcher.ts?15ce","webpack:///./src/fluxex/actions/todoActions.ts?4930"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,0CAAqD;AACrD,2CAAsD;AACtD,oCAAmC;AAEnC,KAAgB,eAAY;AAC5B,iBAAU,WAAS,SAAE,UAAgB;AACnC,SAAU,SAAU,QAAQ;AACtB,aAAO,OAAa;AACxB,cAAK,eAAY,aAAS;AACjB,qBAAO,OAAO;AACZ,uBAAW,WAAe;AAC7B;AACR,cAAK,eAAY,aAAY;AACjB,wBAAO,OAAO;AACf,uBAAW,WAAe;AAC7B;AAIZ;;AAAG;AAGH,KAAU;AACJ,WACJ;AAFW;AAIb,KAAW,UAAG,iBAAa;AACnB,YAAK,KAAK,KAClB;AAAE;AAEF,KAAc,aAAG,oBAAc;AACvB,YAAK,KAAO,OAAM,OAC1B;AAeA;;KAAsB;;;;;;;;;;;2CACQ;AAClB,kBAAG,GAAa,cACxB;AAE2B;;;8CAAG;AAC1B,kBAAe,eAAa,cAClC;AAEiB;;;oCAAG;AACd,kBAAK,KACX;AAEc;;;;AACJ,oBAAO,OACjB;AACD;;;;GAhB6B,SACH;;AAiB3B,KAAa,YAAqB,IAAsB;AAEhD,qBAAS,U;;;;;;;;;;;;;;ACnEjB,kCAAoC;AAmBpC,KAAe,aAAoB,IAAI,OAAa;AAE5C,sBAAU,W;;;;;;;;;;;;;;;;;;ACrBlB,0CAAqD;AACrD,2CAEA;;KACkB;;;;;;;iCAAK;AACf,6BAAU,WAAS,SAAC,EAAW,YAAE,eAAY,aAAS,UAAM,MAChE;AACiB;;;oCAAM;AACnB,6BAAU,WAAS,SAAC,EAAW,YAAE,eAAY,aAAY,aAAM,MACnE;AACH;;;;;;AAPD,uBAOC,Y","file":"0.31080dc224a2d25a1674.hot-update.js","sourcesContent":["import {appConstants} from \"../constant/appConstants\"\r\nimport {dispatcher} from \"../dispatcher/AppDispatcher\"\r\nimport {EventEmitter} from \"events\"\r\n\r\nlet CHANGE_EVENT = 'change';\r\ndispatcher.register( function(payload): void {\r\n  let action = payload.action;\r\n  switch(action.actionType){\r\n    case appConstants.ADD_ITEM:\r\n      addItem(action.data);\r\n      todoStore.emitChange(CHANGE_EVENT);\r\n      break;\r\n    case appConstants.REMOVE_ITEM:\r\n      removeItem(action.data);\r\n      todoStore.emitChange(CHANGE_EVENT);\r\n      break;\r\n    default:\r\n      \r\n  }\r\n});\r\n\r\n\r\nvar _store = {\r\n  list: []\r\n};\r\n\r\nvar addItem = function(item){\r\n  _store.list.push(item);\r\n};\r\n\r\nvar removeItem = function(index){\r\n  _store.list.splice(index, 1);\r\n}\r\n\r\n/*\r\nvar todoStore = Object.Assign({}, EventEmitter.prototype, {\r\n  addChangeListener: function(cb){\r\n    this.on(CHANGE_EVENT, cb);\r\n  },\r\n  removeChangeListener: function(cb){\r\n    this.removeListener(CHANGE_EVENT, cb);\r\n  },\r\n  getList: function(){\r\n    return _store.list;\r\n  },\r\n});*/\r\n\r\nclass TodoStoreStatic extends EventEmitter {\r\n  public  addChangeListener(cb){\r\n        this.on(CHANGE_EVENT, cb)\r\n    }\r\n\r\n   public  removeChangeListener(cb){\r\n    this.removeListener(CHANGE_EVENT, cb);\r\n  }\r\n\r\n  public emitChange(ce): void {\r\n    this.emit(ce);\r\n  }\r\n\r\n  public getList(){\r\n      return _store.list;\r\n  }\r\n}\r\n\r\nvar todoStore: TodoStoreStatic =  new TodoStoreStatic();\r\n\r\nexport {todoStore}\n\n\n// WEBPACK FOOTER //\n// ./src/fluxex/stores/todoStore.ts","import {flux,Dispatcher} from \"flux\"\r\n\r\n/*\r\nexport class AppDispatcher {\r\n\r\n    public AppDispatcher;\r\n    constructor() {\r\n        this.AppDispatcher = new Dispatcher();\r\n\r\n        this.AppDispatcher.handleAction = function (action) {\r\n            this.dispatch({source: 'VIEW_ACTION', action: action});\r\n        };\r\n    }\r\n    handleAction(action){\r\n        this.AppDispatcher.dispatch({source: 'VIEW_ACTION', action: action});\r\n    }\r\n\r\n}*/\r\n\r\nlet  dispatcher: Dispatcher<any> = new Dispatcher();\r\n\r\nexport {dispatcher};\n\n\n// WEBPACK FOOTER //\n// ./src/fluxex/dispatcher/AppDispatcher.ts","import {appConstants} from \"../constant/appConstants\"\r\nimport {dispatcher} from \"../dispatcher/AppDispatcher\"\r\n\r\nexport class TodoActions {\r\n    public addItem(item) : void {\r\n        dispatcher.dispatch({actionType: appConstants.ADD_ITEM, data: item})\r\n    }\r\n    public removeItem(index) : void {\r\n        dispatcher.dispatch({actionType: appConstants.REMOVE_ITEM, data: index})\r\n    }\r\n}\r\n\r\n/*\r\nvar AppDispatcher = require('../dispatcher/AppDispatcher');\r\nvar appConstants = require('../constants/appConstants');\r\n\r\nvar todoActions = {\r\n  addItem: function(item){\r\n    AppDispatcher.handleAction({\r\n      actionType: appConstants.ADD_ITEM,\r\n      data: item\r\n    });\r\n  },\r\n  removeItem: function(index){\r\n    AppDispatcher.handleAction({\r\n      actionType: appConstants.REMOVE_ITEM,\r\n      data: index\r\n    })\r\n  }\r\n};\r\n\r\nmodule.exports = todoActions;\r\n*/\n\n\n// WEBPACK FOOTER //\n// ./src/fluxex/actions/todoActions.ts"],"sourceRoot":""}